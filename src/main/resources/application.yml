server:
  port: 8080

spring:
  application:
    name: redis-learning-app
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  
  # PostgreSQL Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/locknroll_db
    username: zatinmeraz
    password: 
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: mongodb://localhost:27017/locknroll_mongo
    # Redis Configuration
    redis:
      host: localhost
      port: 6379
      password: 
      timeout: 100000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: locknroll-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.locknroll.event"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      enable-idempotence: true

# Redisson Configuration
redisson:
  address: redis://localhost:6379
  password: 
  database: 0
  connection-pool-size: 64
  connection-minimum-idle-size: 10
  idle-connection-timeout: 10000
  connect-timeout: 10000
  timeout: 3000
  retry-attempts: 3
  retry-interval: 1500

# Logging Configuration
logging:
  level:
    com.locknroll: DEBUG
    org.springframework.data.redis: DEBUG
    org.redisson: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"
  file:
    name: logs/redis-learning.log

# JWT Configuration
app:
  jwt:
    secret: "mySecretKeyForJWTTokenGenerationThatIsAtLeast256BitsLongForSecurity123456789"
    expiration: 86400000 # 24 hours in milliseconds

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,redis
  endpoint:
    health:
      show-details: always

