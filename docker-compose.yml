version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: locknroll-postgres
    environment:
      POSTGRES_DB: locknroll_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - locknroll-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:4.4
    container_name: locknroll-mongodb
    environment:
      MONGO_INITDB_DATABASE: locknroll_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - locknroll-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache and Lock Store
  redis:
    image: redis:6.2-alpine
    container_name: locknroll-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - locknroll-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: locknroll-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - locknroll-network
    depends_on:
      - redis

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: locknroll-mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8082:8081"
    networks:
      - locknroll-network
    depends_on:
      - mongodb

  # pgAdmin (Web UI for PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: locknroll-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@locknroll.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8083:80"
    networks:
      - locknroll-network
    depends_on:
      - postgres

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  locknroll-network:
    driver: bridge
